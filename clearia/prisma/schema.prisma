this is my schema for t3 app using next-aut// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
    provider = "prisma-client-js"
}
datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}
//can be a Doctor or a nurse or ADMIN
model User { 
    id            String         @id @default(uuid())
    name          String
    email         String         @unique
    role          UserRole       @default(NURSE)
    createdAt     DateTime       @default(now())
    updatedAt     DateTime       @updatedAt
    icuAdmissions IcuAdmission[] @relation("AdmittingStaff")
    statusUpdates StatusUpdate[] @relation("UpdatingStaff")

    // NextAuth fields
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    @@index([email])
}
model Account {
    id                 String  @id @default(cuid())
    userId             String
    type               String
    provider           String
    providerAccountId  String
    refresh_token      String?  @db.Text
    access_token       String?  @db.Text
    expires_at         Int?
    token_type         String?
    scope              String?
    id_token           String?  @db.Text
    session_state      String?
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    @@unique([provider, providerAccountId])
    @@index([userId])
}
model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}
model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime
    @@unique([identifier, token])
}
enum UserRole {
    DOCTOR
    NURSE
    ADMIN
    PATIENT
}
model Patient {
    id            String         @id @default(uuid())
    firstName     String
    lastName      String
    dateOfBirth   DateTime
    medicalId     String         @unique
    allergies     String?
    bloodType     String?
    createdAt     DateTime       @default(now())
    updatedAt     DateTime       @updatedAt
    icuAdmissions IcuAdmission[]
    @@index([medicalId])
    @@index([lastName])
}
model IcuAdmission {
    id            String         @id @default(uuid())
    patientId     String
    patient       Patient        @relation(fields: [patientId], references: [id])
    bedNumber     Int
    admissionDate DateTime       @default(now())
    dischargeDate DateTime?
    staffId       String
    staff         User           @relation("AdmittingStaff", fields: [staffId], references: [id])
    createdAt     DateTime       @default(now())
    updatedAt     DateTime       @updatedAt
    statusUpdates StatusUpdate[]
    @@index([patientId])
    @@index([staffId])
    @@index([admissionDate])
    @@index([dischargeDate])
}
model StatusUpdate {
    id             String       @id @default(uuid())
    icuAdmissionId String
    icuAdmission   IcuAdmission @relation(fields: [icuAdmissionId], references: [id])
    status         PatientStatus
    notes          String?
    timestamp      DateTime     @default(now())
    staffId        String
    staff          User         @relation("UpdatingStaff", fields: [staffId], references: [id])
    @@index([icuAdmissionId])
    @@index([staffId])
    @@index([timestamp])
}
enum PatientStatus {
    CRITICAL
    STABLE
    IMPROVING
    RECOVERED
    DECEASED
}
